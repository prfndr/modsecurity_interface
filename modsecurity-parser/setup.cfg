[pydocstyle]
inherit = false
ignore = D213,D100,D104
match = .*/py


[pycodestyle]
max-line-length = 120


[isort]
sections =
    FUTURE,
    STDLIB,
    THIRDPARTY,
    FIRSTPARTY,
    LOCALFOLDER
default_section = LOCALFOLDER
known_third_party =
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy
multi_line_output = 3
lines_after_imports = 2
force_single_line = True
use_parentheses = True
ensure_newline_before_comments = True
line_length = 80


[flake8]
exclude =
    .git
    __pycache__,
    docs/source/conf.py,
    old,
    build,
    dist
    .venv
max-complexity = 30
max-line-length = 120
ignore=W504
# ignore=W504,F401,E402,E266,E203,W503,C408,C416,B001


[bandit]
# targets: ['*.py']
# targets= .,modsecurity_parser.py
# targets: modsecurity_parser
targets = .
# exclude_dirs = ['tests','__pytest_cache__','.venv']
# exclude_dirs = ["*/tests/*", "*/.venv/*"]
exclude = ./.venv,./.pytest_cache,./tests,./.mypy_cache,__pycache__


[coverage:run]
branch = True
omit =
    */__main__.py
    */tests/*
    */venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:

[coverage:html]
directory = reports


[pylint.config]
[pylint.MASTER]

extension-pkg-whitelist=
    numpy,
    pandas,
    keras,
    tensorflow,
    sklearn,
    matplotlib,
    scipy

[pylint.'MESSAGES CONTROL']

#disable=R,C
#enable=E,W
jobs=1
confidence=HIGH
# confidence=

disable=raw-checker-failed,
        bad-inline-option,
        locally-disabled,
        file-ignored,
        suppressed-message,
        useless-suppression,
        deprecated-pragma,
        use-symbolic-message-instead,
        # USER DEFINED
        broad-except,
        simplifiable-if-expression,
        too-many-statements
        #no-else-break
        #too-many-branches

[pylint.FORMAT]

max-line-length=120
max-module-lines = 2000

# [tool:pytest]
# minversion = 6.0
# addopts = -ra -q
# testpaths =
#    tests
